const express = require('express');
const router = express.Router();

const FileController = require('../controller/fileController')

const IndexController = require('../controller/indexController')
const AdminController = require('../controller/adminController')
const SchoolAdminController = require('../controller/schoolAdminController')
const StaffController = require('../controller/staffController')
const StudentController = require('../controller/studentController')
const ParentController = require("../controller/parentController")

/*--------------Home and Admin Routes--------------*/
router.get('/', IndexController.getIndex)
router.get('/admin', AdminController.getAdminPage)
router.post('/admin', AdminController.postAdmin)
router.get('/admin/dashboard', AdminController.getAdminDashboard)
router.get('/admin/new-schools', AdminController.getNewSchool)
router.get('/admin/approved-schools', AdminController.getApprovedSchool)
router.get('/admin/school/:schoolID', AdminController.getSingleSchool)
router.get('/admin/school/:schoolID/approve', AdminController.approveSchool)
router.get('/admin/logout', AdminController.getAdminLogout)

/*--------------School Admin Routes--------------*/
router.get('/school', SchoolAdminController.getSchoolLogin)
router.post('/school', SchoolAdminController.postSchoolAdminLogin)
router.get('/school/signup', SchoolAdminController.getSchoolSignup)
router.get('/forgot-password', SchoolAdminController.getForgotPassword)
router.post('/school/signup', SchoolAdminController.postSchoolAdminSignUp)
router.get('/school/verify/:schoolID', SchoolAdminController.verifyEmail)
router.get('/school/dashboard', SchoolAdminController.getDashboard)
router.get('/school/profile', SchoolAdminController.getSchoolProfile)
router.post('/school/profile', FileController.adminUpload.single('picture'), SchoolAdminController.updateLogo)
router.get('/school/settings', SchoolAdminController.settingsPage)
router.post('/school/settings', SchoolAdminController.postSettings)
router.get('/school/session', SchoolAdminController.getSessionPage)
router.post('/school/session', SchoolAdminController.postSession)
router.get('/school/session/:sessionID', SchoolAdminController.getTermPage)
router.post('/school/populate-terms', SchoolAdminController.populateTerm)
router.post('/school/session/:sessionID', SchoolAdminController.postTerm)
router.get('/school/session/current/:sessionID', SchoolAdminController.makeCurrent)
router.get('/school/subjects', SchoolAdminController.getSubjects) 
router.post('/school/subjects', SchoolAdminController.addASubject)
router.get('/school/subjects/:subjectname', SchoolAdminController.removeSubject)
router.get('/school/class', SchoolAdminController.getClasses)
router.post('/school/class', SchoolAdminController.postClasses)
router.get('/school/class/:classname', SchoolAdminController.getStudentClass)
router.get('/school/class/:classname/subjects', SchoolAdminController.subjectsClass)
router.post('/school/class/:classname/subjects', SchoolAdminController.addSubject)
router.get('/school/class/:classname/subjects/:subjectname/delete', SchoolAdminController.deleteSubject)
router.get('/school/class/:classname/delete', SchoolAdminController.deleteClass)

router.get('/school/new-student', SchoolAdminController.getNewStudent)
router.post('/school/new-student', SchoolAdminController.postStudents)
router.get('/school/new-student/:studentID/complete', SchoolAdminController.getComplete)
router.post('/school/new-student/:studentID/complete', FileController.studentUpload.single('picture'), SchoolAdminController.completeStudentReg)
router.get('/school/new-student/:studentID', SchoolAdminController.getSingleStudent)
router.post('/school/new-student/:studentID', FileController.studentUpload.single('picture'), SchoolAdminController.updateSingleStudent)

router.get('/school/staff', SchoolAdminController.getStaffs)
router.get('/school/staff/new', SchoolAdminController.getNewStaff)
router.post('/school/staff/confirm-head', SchoolAdminController.confirmHeadClass)
router.post('/school/staff/new', SchoolAdminController.postStaffs)
router.get('/school/staff/:staffID/complete', SchoolAdminController.getStaffComplete)
router.post('/school/staff/:staffID/complete', FileController.staffUpload.single('picture'), SchoolAdminController.completeStaffReg)
router.get('/school/staff/:staffID', SchoolAdminController.getSingleStaff)
router.post('/school/staff/:staffID',  FileController.staffUpload.single('picture'), SchoolAdminController.updateSingleStaff)

router.get("/school/parent", SchoolAdminController.getParents)
router.get('/school/parent/new', SchoolAdminController.getNewParent)
router.post('/school/parent/new', SchoolAdminController.postParents)
//router.post('/school/parent/confirm-parent', SchoolAdminController.confirmParent)
router.get('/school/parent/:parentID/complete', SchoolAdminController.getParentComplete)
router.post('/school/parent/:parentID/complete', FileController.parentUpload.single('picture'), SchoolAdminController.completeParentReg)
router.get('/school/parent/:parentID', SchoolAdminController.getSingleParent)
router.post('/school/parent/:parentID',  FileController.parentUpload.single('picture'), SchoolAdminController.updateSingleParent)

router.get('/school/exam', SchoolAdminController.getExams)
router.post('/school/exam', SchoolAdminController.postExams)
router.get('/school/exam/:examcode/questions', SchoolAdminController.getExamQuestions)
router.get('/school/exam/:examcode/questions/:courseID', SchoolAdminController.viewQuestions)
router.get('/school/exam/:examcode/questions/:courseID/release', SchoolAdminController.releaseQuestion)

router.get('/school/report', SchoolAdminController.getReports)
router.get('/school/report/:examcode', SchoolAdminController.getAllExams)
router.get('/school/report/:examcode/:classname', SchoolAdminController.getFullReport)
router.get('/school/report/:examcode/:classname/release', SchoolAdminController.releaseResults)
router.get('/school/report/:examcode/:classname/unrelease', SchoolAdminController.unReleaseResults)

router.get('/school/attendance', SchoolAdminController.getAttendanceSession)
router.get('/school/attendance/:sessionID/', SchoolAdminController.getAttendanceTerm)
router.get('/school/attendance/:sessionID/:term', SchoolAdminController.getAttendanceClasses)
router.get('/school/attendance/:sessionID/:term/:classID', SchoolAdminController.firstAttendance)
router.get('/school/attendance/:sessionID/:term/:classID/:week', SchoolAdminController.getEachAttendance)

router.get('/school/lesson-notes', SchoolAdminController.getNotesSession)
router.get('/school/lesson-notes/:sessionID', SchoolAdminController.getNotesTerm)
router.get('/school/lesson-notes/:sessionID/:term', SchoolAdminController.getLessonNotes)
router.get('/school/lesson-notes/:sessionID/:term/all', SchoolAdminController.getApprovedNotes)
router.get('/school/lesson-notes/:sessionID/:term/:noteID', SchoolAdminController.getSingleNote)
router.get('/school/lesson-notes/:sessionID/:term/:noteID/approve', SchoolAdminController.approveNote)

router.get('/school/mail', SchoolAdminController.getMailPage)
router.get('/school/help', SchoolAdminController.getHelp)
router.get('/school/logout', SchoolAdminController.getLogout)

/*--------------Staff Routes--------------*/
router.get('/staff', IndexController.getStaffPage)
router.post('/staff', StaffController.postStaffLogin)
router.get('/staff/dashboard', StaffController.getDashboard)
router.get('/staff/exam', StaffController.getExams)
router.get('/staff/exam/:examname/courses', StaffController.getCourses)
router.get('/staff/exam/:examname/courses/:coursename', StaffController.getCourseClass)
router.get('/staff/exam/:examname/courses/:coursename/:classname', StaffController.startCourseQuestions)
router.post('/staff/exam/:examname/courses/:coursename/:classname', StaffController.postCourseQuestion)
router.get('/staff/exam/:examname/courses/:coursename/:classname/set-question', StaffController.setQuestions)
router.post('/staff/exam/:examname/courses/:coursename/:classname/set-question', FileController.questionUpload.single('picture'), StaffController.postSetQuestions)
router.get('/staff/exam/:examname/courses/:coursename/:classname/questions', StaffController.checkQuestions)
router.get('/staff/exam/:examname/courses/:coursename/:classname/publish', StaffController.publishQuestions)
router.get('/staff/exam/:examname/courses/:coursename/:classname/questions/delete/:questionID', StaffController.deleteQuestion)
router.get('/staff/exam/:examname/courses/:coursename/:classname/preview', StaffController.previewQuestions)
router.get('/staff/exam/:examname/courses/:coursename/:classname/results', StaffController.checkStudentsResults)

router.get('/staff/attendance', StaffController.attendanceSessionTerm)
router.get('/staff/attendance/:term', StaffController.attendancePage)
router.get('/staff/attendance/:term/:week', StaffController.getAttendance)
router.get('/staff/mark-attendance/:term', StaffController.getMarkAttendance) 
router.post('/staff/mark-attendance/:term', StaffController.postMarkAttendance) 

router.get('/staff/lesson-notes', StaffController.getLessonNoteTerm)
router.get('/staff/lesson-notes/:term', StaffController.getLessonNotePage)
router.get('/staff/lesson-note/:term/create', StaffController.makeLessonNote)
router.post('/staff/lesson-note/:term/create', StaffController.postLessonNote)
router.get('/staff/lesson-note/:term/all', StaffController.getAllLessonNote)
router.get('/staff/lesson-note/:term/:lessonNote', StaffController.getSingleLessonNote)

router.get('/staff/settings', StaffController.settingsPage)
router.post('/staff/settings', StaffController.postSettings)

router.get('/staff/logout', StaffController.getLogout)

/*--------------Student Routes--------------*/
router.get('/student', IndexController.getStudentPage)
router.post('/student', StudentController.postStudentLogin)
router.get('/student/dashboard', StudentController.getDashboard)
router.get('/student/exam', StudentController.getExams)
router.get('/student/exam/:examname/courses', StudentController.getCourses)
router.get('/student/exam/:examname/courses/:coursename/start-exam', StudentController.startExam)
router.get('/student/exam/:examname/courses/:coursename/running', StudentController.examRunning)
router.post('/student/exam/:examname/courses/:coursename/running', StudentController.markExam)
router.get('/student/exam/congrats', StudentController.getCompletePage)
router.get('/student/result', StudentController.getResults)

router.get('/student/settings', StudentController.settingsPage)
router.post('/student/settings', StudentController.postSettings)

router.get('/student/logout', StudentController.getLogout)

/*--------------Parent Routes--------------*/
router.get('/parent', IndexController.getParentPage)
router.post('/parent', ParentController.postParentLogin)
router.get('/parent/dashboard', ParentController.getDashboard)
router.get("/parent/student", ParentController.getChildren)
router.get('/parent/new-student/:studentID', ParentController.getSingleChild)
router.get('/parent/class/:classname', ParentController.getChildClass)
router.get('/parent/class/:classname/subjects', ParentController.getChildSubjects)
router.get("/parent/new-staff/:staffID", ParentController.getClassTeacher)
router.get('/parent/attendance/:term', ParentController.attendancePage)
router.get('/parent/attendance/:term/:week', ParentController.getChildAttendance)

router.get('/parent/settings', ParentController.settingsPage)
router.post('/parent/settings', ParentController.postSettings)

router.get('/parent/logout', ParentController.getLogout)

module.exports = router;
